---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const services = await getCollection("servicios");

  return services.map((service) => ({
    params: { slug: service.id },
    props: { service },
  }));
}

const { service } = Astro.props;
const { data } = service;
---

<Layout title={data.title}>
  <header class="relative w-full h-56 md:h-[490px] overflow-hidden">
    <div class="absolute w-full h-56 z-[2] md:h-[490px] overlay"></div>
    <div
      class="absolute w-full h-full z-[3] flex flex-col md:flex-row justify-center items-center gap-[30px] m-auto px-10 md:px-[9em]"
    >
      <h1
        class="mb-4 text-2xl text-center leading-none tracking-tight text-gray-900 md:text-5xl lg:text-7xl text-white title"
      >
        {data.title}
      </h1>
      <p
        class="mb-4 text-sm md:text-base text-justify leading-none tracking-tight text-gray-900 text-white title"
      >
        {data.description}
      </p>
    </div>
    {
      data.video && (
        <video autoplay muted loop class="object-cover w-full h-full">
          <source src={data.video} type="video/mp4" />{" "}
        </video>
      )
    }
    {
      data.header.length > 0 && (
        <div
          id="controls-carousel"
          class="relative w-full z-[1]"
          data-carousel="slide"
        >
          <div class="relative h-56 overflow-hidden rounded-lg md:h-[490px]">
            {data.header.map((image, id) => (
              <div class="hidden duration-700 ease-in-out" data-carousel-item>
                <img
                  src={image}
                  class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 object-cover"
                  alt={`carusel ${data.title} uno - imagen ${id}`}
                  loading="lazy"
                />
              </div>
            ))}
          </div>
        </div>
      )
    }
  </header>
  {
    data.additionalData.slogan && (
      <div class="flex flex-col md:flex-row justify-around items-center w-full py-2 px-4 gap-[15px] box-border">
        <h2 class="mb-4 text-2xl text-center font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-4xl">
          "{data.additionalData.slogan}"
        </h2>
        <picture class="w-[50%] h-[200px] text-center overflox-hidden">
          <img
            src={data.additionalData.image}
            class="w-full h-full object-contain"
            alt="Logo onac"
            loading="lazy"
          />
        </picture>
      </div>
    )
  }
  {
    data.sections.map((section, sectionIdx) => (
      <div class="flex flex-col  py-2 px-4 w-full box-border">
        <h1
          class={`${sectionIdx % 2 == 0 ? "" : "md:text-start"} mb-4 text-xl text-center font-extrabold leading-none tracking-tight text-gray-900 md:text-4xl lg:text-5xl section-title py-5`}
        >
          {section.title}
        </h1>
        <div
          class={`flex flex-col md:flex-row gap-[15px] justify-start ${sectionIdx % 2 == 0 ? "" : "md:flex-row-reverse"}`}
        >
          {section.images.length > 0 && (
            <div
              id="controls-carousel"
              class="relative w-full md:w-[50%] z-[1]"
              data-carousel="slide"
            >
              <div class="relative h-56 overflow-hidden rounded-lg md:h-[490px]">
                {section.images.map((image, id) => (
                  <div
                    class="hidden duration-700 ease-in-out"
                    data-carousel-item
                  >
                    <img
                      src={image}
                      class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 object-cover"
                      alt={`carusel servicios uno - imagen ${id}`}
                      loading="lazy"
                    />
                  </div>
                ))}
              </div>
            </div>
          )}
          {section.video && (
            <video autoplay muted loop class="w-full md:w-[50%]">
              <source src={section.video} type="video/mp4" />{" "}
            </video>
          )}

          <div
            class="w-full md:w-[50%]"
            id="accordion-color"
            data-accordion="collapse"
            data-active-classes="bg-blue-100 dark:bg-gray-800 text-blue-600 dark:text-white"
          >
            {
              section.content.map((fragment, idx) => (<>
                {
                  fragment.content
                  ? (<>
                    <h2 id={`title-${sectionIdx}-${idx}`}>
                      <button 
                        type="button"
                        class="flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-0 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 gap-3"
                        data-accordion-target={`#section-${sectionIdx}-${idx}`}
                        aria-expanded="false"
                        aria-controls={`section-${sectionIdx}-${idx}`}
                      >
                        <span>{ fragment.title }</span>
                        <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5 5 1 1 5"/>
                        </svg>
                      </button>
                    </h2>
                    <div
                      id={`section-${sectionIdx}-${idx}`}
                      class="hidden"
                      aria-labelledby={`section-${sectionIdx}-${idx}`}
                    >
                      <div class="p-5 border border-b-0 border-gray-200 dark:border-gray-700 dark:bg-gray-900">
                        <Fragment set:html={fragment.content} />
                      </div>
                    </div>
                  </>)
                  : (<>
                  <h2 id={`title-${sectionIdx}-${idx}`}>
                      <span 
                        class="flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-0 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 gap-3"
                      >
                        <span>{ fragment.title }</span>
                      </span>
                    </h2>
                  </>)
                }
              </>
            ))}
          </div>
        </div>
      </div>
    ))
  }

  <div class="call-to-action">
    <a href="/#contacto">Realiza tu cotizaci√≥n</a>
  </div>
</Layout>

<script>
  const buttons = document.querySelectorAll('button[data-accordion-target]');
  let selectedButton: EventTarget | null = null;
  
  buttons.forEach((btn) => {
    btn.addEventListener('click', (btnClicked) => {
      if (btn === btnClicked.currentTarget) {
        const key = btn.getAttribute('data-accordion-target');
        const btnKey = key?.split('-');
        const sectionKey = btnKey ? `#section-${btnKey[1] + "-" + btnKey[2]}` : '';
        const content = document.querySelector(sectionKey);
        btn.ariaExpanded = selectedButton ? 'false' : 'true'; // Cambiar ariaExpanded a false

        if (selectedButton !== null) {
          content?.classList.add('hidden');
          selectedButton = null;
        } else {
          content?.classList.remove('hidden');
          selectedButton = btnClicked.currentTarget;
        }
      }
    });
  });
  
</script>

<style>
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #06112f;
    opacity: 0.45;
    z-index: 2;
  }

  .section-title {
    color: #091b49;
    letter-spacing: 12px;
    text-shadow: 0px 0px 10px #908f95;
  }

  .section-info video {
    width: 50%;
    height: auto;
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .section-info picture img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  li {
    font-size: 15px;
    box-shadow: 0px 0px 30px 0px #6f81af;
    margin-bottom: 14px;
    padding: 20px;
    text-transform: capitalize;
  }

  .call-to-action {
    display: flex;
    width: 100%;
    padding: 3em 0;
  }

  .call-to-action a {
    background-color: #091b49;
    color: white;
    padding: 1em 2em;
    border: none;
    border-radius: 5px;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
  }

  .section-title.impar {
    text-align: start;
  }
  div.impar {
    flex-direction: row-reverse;
  }
</style>
